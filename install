#!/bin/bash
REPO_DIR=`git rev-parse --show-toplevel`

# Add hashes directory to gitignore if it's not there already
GITIGNORE_FILE="${REPO_DIR}/.gitignore"
GITIGNORE_LINE="githooks/.md5"
grep -q "$GITIGNORE_LINE" "$GITIGNORE_FILE" || echo "$GITIGNORE_LINE" >> "$GITIGNORE_FILE"

# Make version assertion script executable
chmod +x "${REPO_DIR}/githooks/assert_correct_versions"

# Install Rails initializer if this is Rails
if [[ -e "${REPO_DIR}/bin/rails" ]]
then
  RAILS_INITIALIZER="${REPO_DIR}/config/initializers/githooks.rb"
  echo '# DO NOT EDIT THIS FILE.' > $RAILS_INITIALIZER
  echo '# IT IS GENERATED VIA THE `githooks/install` SCRIPT' >> $RAILS_INITIALIZER
  cat "${REPO_DIR}/githooks/rails/initializer.rb" >> $RAILS_INITIALIZER
fi

HASHES_DIR="${REPO_DIR}/githooks/.md5"
# Make sure the hashes dir is ready
if ! [[ -e $HASHES_DIR ]]
then
  mkdir "$HASHES_DIR"
fi

# Deal with the individual git hook scripts
HOOKS_FILES="${REPO_DIR}/githooks/hooks/*"
for FILE_NAME in $HOOKS_FILES
do
  # Only deal with it if it's a regular file, not a directory or device.
  if [[ -f $FILE_NAME ]]
  then
    BASE_NAME=`basename $FILE_NAME`
    NEW_FILE_NAME="${REPO_DIR}/.git/hooks/${BASE_NAME}"

    # Copy hook over to .git/hooks and make it executable
    cp $FILE_NAME $NEW_FILE_NAME
    chmod +x $NEW_FILE_NAME

    # Hash the hook and save its hash to a file we can use to check versioning
    HASH_FILE_NAME="${HASHES_DIR}/${BASE_NAME}.md5"
    cat $NEW_FILE_NAME | md5 > $HASH_FILE_NAME
  fi
done
